<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
  <Color x:Key="AdvancedClipboard.Colors.DeleteButton">#d70c16</Color>
  <SolidColorBrush x:Key="AdvancedClipboard.Brushes.DeleteButton" Color="{StaticResource AdvancedClipboard.Colors.DeleteButton}" />

  <Style x:Key="MahApps.Styles.Button.SquareFine" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
    <Setter Property="FontWeight" Value="SemiBold" />
    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Padding" Value="3 4" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid>
            <mah:ClipBorder x:Name="Background"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <mah:ClipBorder x:Name="DisabledVisualElement"
                                        Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Margin="{TemplateBinding BorderThickness}">
              <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid" />
                <VisualState x:Name="InvalidFocused" />
                <VisualState x:Name="InvalidUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Square.Background.MouseOver}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.Square.Foreground.MouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
              <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Lower" />
  </Style>

  <Style x:Key="MahApps.Styles.Button.SquareClose" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Gray9}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource AdvancedClipboard.Brushes.DeleteButton}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="MahApps.Styles.Button.SquareMinMax" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Gray9}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Accent}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>